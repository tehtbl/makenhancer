#!/bin/bash

# set -euopi

###########################################################################################################################################
###########################################################################################################################################
###########################################################################################################################################

# set colors
if test -t 1; then # if terminal
    ncolors=$(which tput > /dev/null && tput colors) # supports color
    if test -n "$ncolors" && test $ncolors -ge 8; then
        termcols=$(tput cols)
        bold="$(tput bold)"
        underline="$(tput smul)"
        standout="$(tput smso)"
        normal="$(tput sgr0)"
        black="$(tput setaf 0)"
        red="$(tput setaf 1)"
        green="$(tput setaf 2)"
        yellow="$(tput setaf 3)"
        blue="$(tput setaf 4)"
        magenta="$(tput setaf 5)"
        cyan="$(tput setaf 6)"
        white="$(tput setaf 7)"
    fi
fi

###########################################################################################################################################
###########################################################################################################################################
###########################################################################################################################################

# print status method
print_status() {
    echo "[*] $1"
}


# print bold method
print_bold() {

    title="$1"
    text="$2"

    echo "${red}==================================================================================================${normal}"
    echo "${red}==================================================================================================${normal}"
    echo
    echo -e "                                             ${bold}${yellow}${title}${normal}"
    echo
    echo -en "  ${text}"
    echo
    echo
    echo "${red}==================================================================================================${normal}"
    echo "${red}==================================================================================================${normal}"
    echo

}

bail() {

    echo
    echo 'Error executing command ... exiting'
    exit 1

}

exec_cmd_nobail() {

    echo "[+] $@"
#    /bin/bash -c "$@"
    eval $@

}

exec_cmd() {
    exec_cmd_nobail $@ || bail
}

print_warn_exit() {

    print_bold "WARNING" "$1"
    exit 0

}

###########################################################################################################################################
###########################################################################################################################################
###########################################################################################################################################

# exit here if sourced by another script
[[ ! ${BASH_SOURCE[0]} -ef "$0" ]] && return

###########################################################################################################################################
###########################################################################################################################################
###########################################################################################################################################

shift
MAKEARGS=$@

### Pre Makefile command

/bin/bash -c "${MAKEARGS}"
1R=$?

### Post Makefile command

exit ${R}
